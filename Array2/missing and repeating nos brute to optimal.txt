#include <bits/stdc++.h> 
//Using frequency Count -> array
//Using Maths-> sum of n natural nos and sum of square of nums and diff
//using bit manipulation -> XOR 
// pair<int,int> missingAndRepeating(vector<int> &arr, int n)
// {
//  int Xor = 0;
// for(auto i : arr){
//  Xor ^= i;
// }
// for(int i = 1; i <=n; i++){
//  Xor ^= i;
// }
//     //rightmost set bit no in rsb
// int rsb = Xor & -Xor;
// int x = 0;
// int y = 0;
// for(auto i: arr){
//  if(i & rsb)
//   x ^= i;
//  else 
//      y ^= i;
// }
// for(int i = 1; i <= n; i++){
//  if(i & rsb)
//   x  ^= i;
//  else y ^= i;
// }
// for(auto i : arr){
//  if(i == x)
//   return {y,x};
//  else if(i == y);
// }
//   return {x,y};
// }
//Can also solve iteratively
pair<int,int> missingAndRepeating(vector<int> &arr, int n){
pair<int,int> r;
   int i=0;
while(i<n){
       if(arr[i]!=arr[arr[i]-1]){
           swap(arr[i],arr[arr[i]-1]);
       }
       else
           i++;
   }
   for(int i=0;i<n;i++){
    if(arr[i]!=i+1){
          r.first=i+1;
           r.second=arr[i];
       }
    }
    return r;
}